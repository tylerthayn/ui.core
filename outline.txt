$.Height(element [,height])
$.Include()
$.Observers(element [,prefix])
$.Observers.Hidden(element [,prefix])
$.Observers.Mounted(element [,prefix])
$.Observers.Resized(element [,prefix])
$.Observers.Shown(element [,prefix])
$.Value(element, name [,value])
$.ValueOf(value)
$.Width(element, [,width])

$().Action(name, ...args)
$().ActionHandler(name, fn)
$().Height([height])
$().Property(name, {value|fn})
$().Value(name [,value])
$().Width([width])

ActionHandlers.Hide
ActionHandlers.Show
ActionHandlers.Toggle

Ui.Widgets.Accordion
Ui.Widgets.App
Ui.Widgets.Bar
Ui.Widgets.Dialog
Ui.Widgets.ListView
Ui.Widgets.PatternLock
Ui.Widgets.Size
Ui.Widgets.SplitView
Ui.Widgets.Tabs
Ui.Widgets.Ui









Ui.Widgets.Ui
	Options
		disabled

	Methods
		Hide([effect] [,cb])
		Toggle([effect] [,cb])
		Show([effect] [,cb])
		Update([cb])

		_create
		_ProcessDataConfigs
		_triggerHandler

	Events
		hidden
		mounted
		ready
		shown
		updated

Ui.Widgets.Size <= Ui.Widgets.Ui

Ui.Widgets.Bar <= ui.Widgets.Ui


Ui/Collapsible
Ui/Bars
	/Top
	/Bottom
	/SideBar
* displayMode: mouse|button (show/hide: based upon mouse locations)
* displayStyle: overlay|push
* position: top|bottom & left|right ??corner:2side??
* effect: slide, fade, fold...


Ui/Toolbar
Ui/PatternLock
Ui/Screen
Ui/App
Ui/Log
Ui/Console


/** View
* html
	+ selector for content already in document
	* src path to html file
	* template generator function

* js
	+ class for preloaded/base widgets
	+ module source path to load with requirejs

* style
	+ (default) n/a: already loaded or loaded with module or loaded with html
	* src or class w/ source (lookup before load)


<View class="Ui.Bars.Side" module="Ui/Bars/Side" src="path/to/html" selector=".Ui.Bar.Side">
	<stateProperty>stateValue</stateProperty>
		...
</view>
